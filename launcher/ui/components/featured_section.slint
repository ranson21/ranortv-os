import { Theme } from "../styles/theme.slint";
import { AppItem } from "app_item.slint";
import { AppTile } from "app_tile.slint";
import { VerticalBox, HorizontalBox, ScrollView } from "std-widgets.slint";

export component FeaturedSection inherits Rectangle {
    in property <[AppItem]> apps;
    in-out property <int> focused-index: 0;
    callback app-clicked(string);
    callback focus-changed(int);

    height: 30%;

    VerticalBox {
        spacing: Theme.spacing-sm;

        ScrollView {
            padding: 10px;

            Rectangle {
                width: parent.width;
                height: parent.height;

                // Use a simple approach with HorizontalBox but override positioning
                HorizontalBox {
                    spacing: 125px;
                    width: parent.width;
                    height: 160px; // Height of the largest tile
                    x: (parent.width - self.preferred-width) / 2; // Center the entire row horizontally
                    y: (parent.height - self.height) / 2; // Center the entire row vertically

                    for app[i] in apps: Rectangle {
                        width: i == root.focused-index ? 280px : 200px;
                        height: 160px; // Container height matches largest tile
                        
                        AppTile {
                            app: app;
                            focused: i == root.focused-index;
                            large: i == root.focused-index;
                            
                            // Center the tile within its container
                            y: (parent.height - self.height) / 2;

                            clicked => {
                                root.focused-index = i;
                                root.focus-changed(i);
                                root.app-clicked(app.id);
                            }
                        }
                    }
                }
            }
        }
    }
}
